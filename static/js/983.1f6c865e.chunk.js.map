{"version":3,"file":"static/js/983.1f6c865e.chunk.js","mappings":"sKAAO,IACMA,EAAU,8B,qMCMvBC,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAiD,6NACjDA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,OAA0C,mBAEnC,IAAMC,EAAQ,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,IAAAK,GAAAC,EAAAA,EAAAA,GAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GA8BlB,OA9BkBP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KACnBM,MAAQ,CACNC,OAAQ,KACRC,KAAM,KACNC,QAAS,KACTC,kBAAmB,KACnBC,WAAW,EACXC,MAAO,MACRjB,EAEDkB,aAAWC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKR,OALQF,EAAAC,KAAA,EAEVzB,EAAK2B,SAAS,CACZX,WAAW,IAEXQ,EAAAE,KAAA,EACqBhC,EAAAA,EAAAA,IAAU,GAADgB,OAC3BjB,EAAAA,EAAO,uCACV,KAAD,EAAA6B,EAAAE,EAAAI,KAFOL,EAAID,EAAJC,KAIRvB,EAAK2B,SAAS,CACZf,OAAQW,EAAKM,UACZL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEHxB,EAAK2B,SAAS,CAAEV,MAAOO,EAAAM,GAAMC,UAAW,QAIrC,OAJqCP,EAAAC,KAAA,GAExCzB,EAAK2B,SAAS,CACZX,WAAW,IACVQ,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAZ,EAAA,wBAENrB,CAAC,CAyFD,OAzFAkC,EAAAA,EAAAA,GAAAvC,EAAA,EAAAwC,IAAA,oBAAAC,MA6BD,WACEC,KAAKnB,aACP,GAMF,CAAAiB,IAAA,SAAAC,MAEE,WACE,OACEE,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CAAAC,SAAA,EACXC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBAEkB,OAArBH,KAAK1B,MAAMM,QACVqB,EAAAA,EAAAA,MAAA,KAAGI,UAAU,aAAYF,SAAA,CAAC,8CACoBH,KAAK1B,MAAMM,SAG1DoB,KAAK1B,MAAMK,YAAayB,EAAAA,EAAAA,KAACE,EAAAA,EAAM,KAChCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaF,UAC1BC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWF,SACA,OAAtBH,KAAK1B,MAAMC,QACVyB,KAAK1B,MAAMC,OAAOgC,KAAI,SAAAC,GACpB,OACEJ,EAAAA,EAAAA,KAAA,MAGEC,UAAU,gBAAeF,UAEzBC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAE,WAAArC,OAAamC,EAAMG,IAAKR,UAC9BC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWF,SAAEK,EAAMI,WAL9BJ,EAAMG,GASjB,UAwBZ,KAACrD,CAAA,CAvHkB,CAASuD,EAAAA,WA0H9B,W,qEClIaX,E,OAAeY,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uuB","sources":["components/config.js","pages/HomePage.jsx","pages/MoviesPage.styled.js"],"sourcesContent":["export const API_KEY= \"fd6d5c35d1cf4f271430ea570a695e9c\";\nexport const API_URL = \"https://api.themoviedb.org/3\";","import axios from 'axios';\nimport React from 'react';\n\nimport { StyledMovies } from './MoviesPage.styled';\nimport Loader from 'components/Loader/Loader';\nimport { Link } from 'react-router-dom';\nimport { API_URL } from 'components/config';\naxios.defaults.headers.common[\"Authorization\"] = \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZDZkNWMzNWQxY2Y0ZjI3MTQzMGVhNTcwYTY5NWU5YyIsInN1YiI6IjY1NGY2ZTA5ZDQ2NTM3MDBmZTM1ZGRjNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.psMl8hPRoscle1q5_VKpQUVYxDapYRduGZdJRGatNVg\";\naxios.defaults.headers.common[\"accept\"] = \"application/json\";\n\nexport class HomePage extends React.Component {\n  state = {\n    movies: null,\n    cast: null,\n    reviews: null,\n    selectedMovieName: null,\n    isLoading: false,\n    error: null,\n  };\n\n  fetchMovies = async () => {\n    try {\n      this.setState({\n        isLoading: true,\n      });\n        // console.log(`${API_URL}/trending/all/day?language=en-US&key=${API_KEY}`);\n      const { data } = await axios.get(\n        `${API_URL}/trending/movie/day?language=en-US`\n      );\n\n      this.setState({\n        movies: data.results,\n      });\n    } catch (error) {\n      this.setState({ error: error.message });\n    } finally {\n      this.setState({\n        isLoading: false,\n      });\n    }\n  };\n\n//   fetchPostComments = async () => {\n//     try {\n//       this.setState({\n//         isLoading: true,\n//       });\n//       const { data } = await axios.get(\n//         `https://jsonplaceholder.typicode.com/comments?postId=${this.state.selectedPostId}`\n//       );\n\n//       this.setState({\n//         comments: data,\n//       });\n//     } catch (error) {\n//       this.setState({ error: error.message });\n//     } finally {\n//       this.setState({\n//         isLoading: false,\n//       });\n//     }\n//   };\n\n//   onSelecPostId = postId => {\n//     this.setState({\n//       selectedPostId: postId,\n//     });\n//   };\n\n  componentDidMount() {\n    this.fetchMovies();\n  }\n\n//   componentDidUpdate(_, prevState) {\n//     if (prevState.selectedPostId !== this.state.selectedPostId) {\n//       this.fetchPostComments();\n//     }\n//   }\n\n  render() {\n    return (\n      <StyledMovies>\n        <h1>Trending today:</h1>\n\n        {this.state.error !== null && (\n          <p className=\"error-bage\">\n            Oops, some error occured... Error message: {this.state.error}\n          </p>\n        )}\n        {this.state.isLoading && <Loader />}\n        <div className=\"listWrapper\">\n          <ul className=\"movieList\">\n            {this.state.movies !== null &&\n              this.state.movies.map(movie => {\n                return (\n                  <li\n                    key={movie.id}\n                    // onClick={() => this.onSelecPostId(post.id)}\n                    className=\"movieListItem\"\n                  >\n                    <Link to={`/movies/${movie.id}`}>\n                      <h2 className=\"itemTitle\">{movie.title}</h2>\n                    </Link>\n                  </li>\n                );\n              })}\n          </ul>\n          {/* <ul className=\"commentsList\">\n            {this.state.selectedPostId !== null && (\n              <li className=\"commentsListItem\">\n                Selected post id: {this.state.selectedPostId}\n              </li>\n            )}\n            {this.state.comments !== null &&\n              this.state.comments.map(comment => {\n                return (\n                  <li key={comment.id} className=\"commentsListItem\">\n                    <h2 className=\"commentTitle\">Name: {comment.name}</h2>\n                    <h3 className=\"commentEmail\">Email: {comment.email}</h3>\n                    <p className=\"commentBody\">\n                      <b>Body:</b> {comment.body}\n                    </p>\n                  </li>\n                );\n              })}\n          </ul> */}\n        </div>\n      </StyledMovies>\n    );\n  }\n}\n\nexport default HomePage;","import styled from 'styled-components';\n\nexport const StyledMovies = styled.div`\n  max-width: 1200px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 15px;\n\n  .loader {\n    position: fixed;\n    top: 20px;\n    right: 20px;\n  }\n\n  .postList {\n    list-style: none;\n    padding: 0;\n    max-width: 450px;\n  }\n  .movieListItem {\n    padding: 10px;\n    border: 2px dashed black;\n    margin-bottom: 25px;\n    cursor: pointer;\n  }\n  .itemTitle {\n    margin-top: 0;\n    margin-bottom: 15px;\n  }\n  .itemBody {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n  .error-bage {\n    padding: 25px;\n    border: 1px solid blue;\n    background-color: orange;\n    margin-bottom: 20px;\n    font-size: 20px;\n  }\n\n  .movieDetails { \n    display: flex;\n    flex-direction: row;\n    gap: 20px;\n  }\n \n`;"],"names":["API_URL","axios","HomePage","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","movies","cast","reviews","selectedMovieName","isLoading","error","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","setState","sent","results","t0","message","finish","stop","_createClass","key","value","this","_jsxs","StyledMovies","children","_jsx","className","Loader","map","movie","Link","to","id","title","React","styled","_templateObject","_taggedTemplateLiteral"],"sourceRoot":""}