{"version":3,"file":"static/js/797.4ead8424.chunk.js","mappings":"sKAAO,IACMA,EAAU,8B,mICIvBC,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAiD,6NACjDA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,OAA0C,mBAuE1C,UAlEkB,WAChB,IAAAC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA4CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAnDG,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BR,EAAAA,EAAAA,UAAS,MAAKS,GAAAb,EAAAA,EAAAA,GAAAY,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,GAAWC,EAAAA,EAAAA,MACXC,EAAajB,EAAakB,IAAI,SA+BpC,OApBAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAmB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGT,OAHSF,EAAAC,KAAA,EAExBlB,GAAa,GACbI,EAAS,MAAMa,EAAAE,KAAA,EACQlC,EAAAA,EAAAA,IAAU,GAADmC,OACzBpC,EAAAA,EAAO,wBAAAoC,OAAuBb,EAAU,2BAC7C,KAAD,EAAAQ,EAAAE,EAAAI,KAFOL,EAAID,EAAJC,KAGRpB,EAAkBoB,EAAKM,SAASL,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAEhCb,EAASa,EAAAM,GAAMC,SAAS,QAEJ,OAFIP,EAAAC,KAAA,GAExBlB,GAAa,GAAOiB,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAZ,EAAA,yBAEvB,kBAbwB,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAezBlB,GAhBuB,CAiBzB,GAAG,CAACH,KAGFsB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAME,SA9BW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAQJ,EAAEG,cAAcE,SAASC,UAAUF,MACjD7C,EAAgB,CAAEgD,MAAOH,IACzBF,EAAKM,OACP,EAwBiCV,SAAA,EAC3BW,EAAAA,EAAAA,KAAA,SAAAX,UACEW,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,KAAK,YAAYC,UAAQ,EAACC,YAAY,mBAE3DJ,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQZ,SAAC,cAEb,OAAV3B,IAAkBsC,EAAAA,EAAAA,KAAA,KAAGK,UAAU,aAAYhB,SAAE3B,IAC7CJ,IAAa0C,EAAAA,EAAAA,KAACM,EAAAA,EAAM,IACD,OAAnBpD,GACCA,EAAeqD,KAAI,SAAAC,GACjB,OACER,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CACHC,MAAO,CAAEC,KAAM/C,GAEfgD,GAAE,WAAAjC,OAAa6B,EAAMK,IAAKxB,UAE1BW,EAAAA,EAAAA,KAAA,OAAAX,UACEW,EAAAA,EAAAA,KAAA,MAAAX,SAAKmB,EAAMM,WAJRN,EAAMK,GAQjB,MAGR,C","sources":["components/config.js","pages/MoviesPage.jsx"],"sourcesContent":["export const API_KEY= \"fd6d5c35d1cf4f271430ea570a695e9c\";\nexport const API_URL = \"https://api.themoviedb.org/3\";","import axios from 'axios';\nimport Loader from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { API_URL } from 'components/config';\naxios.defaults.headers.common[\"Authorization\"] = \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZDZkNWMzNWQxY2Y0ZjI3MTQzMGVhNTcwYTY5NWU5YyIsInN1YiI6IjY1NGY2ZTA5ZDQ2NTM3MDBmZTM1ZGRjNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.psMl8hPRoscle1q5_VKpQUVYxDapYRduGZdJRGatNVg\";\naxios.defaults.headers.common[\"accept\"] = \"application/json\";\n\n// rcc - react class component\n// rafce - react arrow function expression component export default\n\nconst MoviePage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchedMovies, setSearchedMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n  const queryValue = searchParams.get('query'); \n  // CTRL + SHIFT + L\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const value = e.currentTarget.elements.searchKey.value;\n    setSearchParams({ query: value });\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (!queryValue) return;\n    const fetchSearchedMovies = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const { data } = await axios.get(\n            `${API_URL}/search/movie?query=${queryValue}&language=en-US&page=1`\n        );\n        setSearchedMovies(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchSearchedMovies();\n  }, [queryValue]);\n\n  return (\n    <div>\n      <form onSubmit={onFormSubmit}>\n        <label>\n          <input type=\"text\" name=\"searchKey\" required placeholder=\"Enter movie\" />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n      {error !== null && <p className=\"error-bage\">{error}</p>}\n      {isLoading && <Loader />}\n      {searchedMovies !== null &&\n        searchedMovies.map(movie => {\n          return (\n            <Link\n              state={{ from: location }}\n              key={movie.id}\n              to={`/movies/${movie.id}`}\n            >\n              <div>\n                <h2>{movie.title}</h2>\n              </div>\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default MoviePage;"],"names":["API_URL","axios","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","searchedMovies","setSearchedMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","location","useLocation","queryValue","get","useEffect","fetchSearchedMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","results","t0","message","finish","stop","apply","arguments","_jsxs","children","onSubmit","e","preventDefault","form","currentTarget","value","elements","searchKey","query","reset","_jsx","type","name","required","placeholder","className","Loader","map","movie","Link","state","from","to","id","title"],"sourceRoot":""}